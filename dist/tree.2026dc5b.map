{"version":3,"sources":["tree.js"],"names":["createTree","value","data","children","parent","addChild","node","newNode","push","travel","tree","fn","i","length","find","result","undefined","removeNode","siblings","index","splice","node2","node3","node4","node5","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,aAAa,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC1B,WAAO;AACHC,cAAMD,KADH;AAEHE,kBAAU,IAFP;AAGHC,gBAAQ;AAHL,KAAP;AAKH,CAND;AAOA,IAAMC,WAAW,SAAXA,QAAW,CAACC,IAAD,EAAOL,KAAP,EAAiB;AAC9B,QAAMM,UAAU;AACZL,cAAMD,KADM;AAEZE,kBAAU,IAFE;AAGZC,gBAAQE;AAHI,KAAhB;AAKAA,SAAKH,QAAL,GAAgBG,KAAKH,QAAL,IAAiB,EAAjC;AACAG,SAAKH,QAAL,CAAcK,IAAd,CAAmBD,OAAnB;AACA,WAAOA,OAAP;AACH,CATD;AAUA,IAAME,SAAS,SAATA,MAAS,CAACC,IAAD,EAAOC,EAAP,EAAc;AACzBA,OAAGD,IAAH;AACA,QAAI,CAACA,KAAKP,QAAV,EAAoB;AAAE;AAAQ;AAC9B,SAAK,IAAIS,IAAI,CAAb,EAAgBA,IAAIF,KAAKP,QAAL,CAAcU,MAAlC,EAA0CD,GAA1C,EAA+C;AAC3CH,eAAOC,KAAKP,QAAL,CAAcS,CAAd,CAAP,EAAyBD,EAAzB;AACH;AACJ,CAND;AAOA,IAAMG,OAAO,SAAPA,IAAO,CAACJ,IAAD,EAAOJ,IAAP,EAAgB;AACzB,QAAII,SAASJ,IAAb,EAAmB;AAAE;AACjB,eAAOI,IAAP;AACH,KAFD,MAEO,IAAIA,KAAKP,QAAT,EAAmB;AAAE;AACxB,aAAK,IAAIS,IAAI,CAAb,EAAgBA,IAAIF,KAAKP,QAAL,CAAcU,MAAlC,EAA0CD,GAA1C,EAA+C;AAC3C,gBAAMG,SAASD,KAAKJ,KAAKP,QAAL,CAAcS,CAAd,CAAL,EAAuBN,IAAvB,CAAf;AACA,gBAAIS,MAAJ,EAAY;AAAE,uBAAOA,MAAP;AAAe;AAChC;AACD,eAAOC,SAAP;AACH,KANM,MAMA;AACH,eAAOA,SAAP;AACH;AACJ,CAZD;;AAcA,IAAMC,aAAa,SAAbA,UAAa,CAACP,IAAD,EAAOJ,IAAP,EAAgB;AAC/B,QAAMY,WAAWZ,KAAKF,MAAL,CAAYD,QAA7B,CAD+B,CACQ;AACvC,QAAIgB,QAAQ,CAAZ;AACA,SAAK,IAAIP,IAAI,CAAb,EAAgBA,IAAIM,SAASL,MAA7B,EAAqCD,GAArC,EAA0C;AACtC,YAAIM,SAASN,CAAT,MAAgBN,IAApB,EAA0B;AACtBa,oBAAQP,CAAR;AACH;AACJ;AACDM,aAASE,MAAT,CAAgBD,KAAhB,EAAuB,CAAvB,EAR+B,CAQJ;AAC9B,CATD;;AAYA,IAAMT,OAAOV,WAAW,EAAX,CAAb;AACA,IAAMqB,QAAQhB,SAASK,IAAT,EAAe,EAAf,CAAd;AACA,IAAMY,QAAQjB,SAASK,IAAT,EAAe,EAAf,CAAd;AACA,IAAMa,QAAQlB,SAASK,IAAT,EAAe,EAAf,CAAd;AACA,IAAMc,QAAQnB,SAASK,IAAT,EAAe,EAAf,CAAd;AACAL,SAASgB,KAAT,EAAgB,GAAhB;AACAhB,SAASgB,KAAT,EAAgB,GAAhB;AACAhB,SAASgB,KAAT,EAAgB,GAAhB;AACAhB,SAASgB,KAAT,EAAgB,GAAhB;AACAI,QAAQC,GAAR,CAAYhB,IAAZ;AACA,IAAMC,KAAK,SAALA,EAAK,OAAQ;AACfc,YAAQC,GAAR,CAAYpB,KAAKJ,IAAjB;AACH,CAFD;;AAIAe,WAAWP,IAAX,EAAiBc,KAAjB;AACAC,QAAQC,GAAR,CAAYhB,IAAZ","file":"tree.2026dc5b.map","sourceRoot":"..\\src","sourcesContent":["const createTree = (value) => {\r\n    return {\r\n        data: value,\r\n        children: null,\r\n        parent: null\r\n    };\r\n};\r\nconst addChild = (node, value) => {\r\n    const newNode = {\r\n        data: value,\r\n        children: null,\r\n        parent: node\r\n    };\r\n    node.children = node.children || [];\r\n    node.children.push(newNode);\r\n    return newNode;\r\n};\r\nconst travel = (tree, fn) => {\r\n    fn(tree);\r\n    if (!tree.children) { return }\r\n    for (let i = 0; i < tree.children.length; i++) {\r\n        travel(tree.children[i], fn);\r\n    }\r\n};\r\nconst find = (tree, node) => {\r\n    if (tree === node) { //tree全等node，说明找到节点了\r\n        return tree\r\n    } else if (tree.children) { //tree.children存在，遍历tree\r\n        for (let i = 0; i < tree.children.length; i++) {\r\n            const result = find(tree.children[i], node)\r\n            if (result) { return result }\r\n        }\r\n        return undefined\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n\r\nconst removeNode = (tree, node) => {\r\n    const siblings = node.parent.children; //通过给所有节点添加parent元素，方便查找兄弟姐妹元素\r\n    let index = 0;\r\n    for (let i = 0; i < siblings.length; i++) {\r\n        if (siblings[i] === node) {\r\n            index = i;\r\n        }\r\n    }\r\n    siblings.splice(index, 1); //children是数组，只能通过查找下标删除\r\n}\r\n\r\n\r\nconst tree = createTree(10);\r\nconst node2 = addChild(tree, 20);\r\nconst node3 = addChild(tree, 30);\r\nconst node4 = addChild(tree, 40);\r\nconst node5 = addChild(tree, 50);\r\naddChild(node2, 201);\r\naddChild(node2, 202);\r\naddChild(node2, 203);\r\naddChild(node2, 204);\r\nconsole.log(tree);\r\nconst fn = node => {\r\n    console.log(node.data);\r\n};\r\n\r\nremoveNode(tree, node5);\r\nconsole.log(tree);"]}